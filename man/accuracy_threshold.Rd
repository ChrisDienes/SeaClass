% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/accuracy_threshold.R
\name{accuracy_threshold}
\alias{accuracy_threshold}
\title{Accuracy Threshold}
\usage{
accuracy_threshold(x, group, pos_class)
}
\arguments{
\item{x}{a numeric predictor.}

\item{group}{binary grouping variable.}

\item{pos_class}{group level for positive class.}
}
\value{
\itemize{
\item{\code{misclass} }{rate of misclassification.}
\item{\code{cut} }{selected threshold.}
\item{\code{direction} }{indicator for positive group direction.}
}
}
\description{
Returns the best binary threshold rule based on accuracy.
}
\details{
Optimizes threshold rule based on misclassification rate (1 - accuracy). Upper rules are defined as greater than \code{cut}, and lower is less than or equal to \code{cut}.
}
\examples{
### General Use: ###
set.seed(123)
x <- c(rnorm(100,0,1),rnorm(100,2,1))
group <- c(rep(0,100),rep(2,100))
accuracy_threshold(x=x, group=group, pos_class=2)
accuracy_threshold(x=x, group=group, pos_class=0)
### Bagged Example ###
set.seed(123)
replicate_function = function(index){accuracy_threshold(x=x[index], group=group[index], pos_class=2)$cut}
sample_cuts = replicate(100, {
  sample_index = sample.int(n=length(x),replace=TRUE)
  replicate_function(index=sample_index)
})
bagged_scores = sapply(x, function(x) mean(x > sample_cuts))
unbagged_cut    = accuracy_threshold(x=x, group=group, pos_class=2)$cut
unbagged_scores = ifelse(x > unbagged_cut, 1, 0)
# Compare AUC:
PRROC::roc.curve(scores.class0 = bagged_scores,weights.class0 = ifelse(group==2,1,0))$auc
PRROC::roc.curve(scores.class0 = unbagged_scores,weights.class0 = ifelse(group==2,1,0))$auc
bagged_prediction = ifelse(bagged_scores > 0.50, 2, 0)
unbagged_prediction = ifelse(x > unbagged_cut, 2, 0)
# Compare Confusion Matrix:
table(bagged_prediction, group)
table(unbagged_prediction, group)
}
\seealso{
\code{\link{max_fp_threshold}}, \code{\link{score_threshold}}
}
